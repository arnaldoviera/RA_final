summary(mod_15)
ddl <- cbind(data,clasif_estados) ##se pega bien
ddl$Regiones <- as.factor(ddl$Regiones)
ddl$Este <- as.factor(ddl$Este)
ddl <- cbind(ddl, dummy(ddl$Regiones, sep ="_"))
ddl <- cbind(ddl, dummy(ddl$estado, sep ="_"))
ddl$condado <- NULL
ddl$estado <- NULL
ddl$estado <- NULL
ddl$ddl_1 <- NULL
ddl$ddl_AL <- NULL
ddl$`Descrip Estado`<- NULL
ddl$Este <- NULL
ddl$Regiones <- NULL
stepAIC(
object = lm(pje ~ ., data = ddl), #punto de partida
scope = list(upper = lm(pje ~ 1, data = ddl)), #máximo modelo posible
direction = "backward", #método de selección
trace = F #para no imprimir resultados parciales
)
mod_9  <-  lm(formula = pje ~ ahorros + ingpc + pobreza + veteranos + mujeres +
densidad + crimen + Regiones + Este + ddl_AR + ddl_CA + ddl_CO +
ddl_DC + ddl_DE + ddl_FL + ddl_IA + ddl_ID + ddl_IL + ddl_IN +
ddl_KS + ddl_LA + ddl_MA + ddl_ME + ddl_MI + ddl_MN + ddl_MO +
ddl_MS + ddl_NC + ddl_NE + ddl_NJ + ddl_NM + ddl_NY + ddl_OH +
ddl_OR + ddl_PA + ddl_TN + ddl_UT + ddl_WA, data = ddl)
summary(mod_9)
mod_9  <-  lm(formula = pje ~ ahorros + ingpc + pobreza + veteranos + mujeres +
densidad + crimen + Regiones + Este + ddl_AR + ddl_CA + ddl_CO +
ddl_DC + ddl_DE + ddl_FL + ddl_IA + ddl_ID + ddl_IL + ddl_IN +
ddl_KS + ddl_LA + ddl_MA + ddl_ME + ddl_MI + ddl_MN + ddl_MO +
ddl_MS + ddl_NC + ddl_NE + ddl_NJ + ddl_NM + ddl_NY + ddl_OH +
ddl_OR + ddl_PA + ddl_TN + ddl_UT + ddl_WA, data = ddl)
stepAIC(
object = lm(pje ~ ., data = ddl), #punto de partida
scope = list(upper = lm(pje ~ 1, data = ddl)), #máximo modelo posible
direction = "backward", #método de selección
trace = F #para no imprimir resultados parciales
)
stepAIC(
object = lm(pje ~ ., data = ddl), #punto de partida
scope = list(upper = lm(pje ~ 1, data = ddl)), #máximo modelo posible
direction = "backward", #método de selección
trace = F #para no imprimir resultados parciales
)
mod_9  <-  lm(formula = pje ~ ahorros + ingpc + pobreza + veteranos + mujeres +
densidad + crimen + ddl_2 + ddl_3 + ddl_4 + ddl_AR + ddl_CA +
ddl_CO + ddl_DC + ddl_DE + ddl_FL + ddl_ID + ddl_IL + ddl_IN +
ddl_KS + ddl_LA + ddl_MA + ddl_ME + ddl_MI + ddl_MO + ddl_MS +
ddl_NC + ddl_ND + ddl_NE + ddl_NJ + ddl_NM + ddl_NY + ddl_OH +
ddl_OK + ddl_OR + ddl_PA + ddl_SD + ddl_TN + ddl_TX + ddl_UT +
ddl_WA, data = ddl)
summary(mod_9)
plot(mod_9)
densidad + crimen + Regiones + Este + ddl_AR + ddl_CA + ddl_CO +
ddl_DC + ddl_DE + ddl_FL + ddl_IA + ddl_ID + ddl_IL + ddl_IN +
ddl_KS + ddl_LA + ddl_MA + ddl_ME + ddl_MI + ddl_MN + ddl_MO +
ddl_MS + ddl_NC + ddl_NE + ddl_NJ + ddl_NM + ddl_NY + ddl_OH +
ddl_OR + ddl_PA + ddl_TN + ddl_UT + ddl_WA, data = ddl1)
excluir <- c(1602, 2184, 948,1297, 1871,1765,2356)
ddl1 <- slice(ddl, -excluir)
mod_10  <-  lm(formula = pje ~ ahorros + ingpc + pobreza + veteranos + mujeres +
densidad + crimen + Regiones + Este + ddl_AR + ddl_CA + ddl_CO +
ddl_DC + ddl_DE + ddl_FL + ddl_IA + ddl_ID + ddl_IL + ddl_IN +
ddl_KS + ddl_LA + ddl_MA + ddl_ME + ddl_MI + ddl_MN + ddl_MO +
ddl_MS + ddl_NC + ddl_NE + ddl_NJ + ddl_NM + ddl_NY + ddl_OH +
ddl_OR + ddl_PA + ddl_TN + ddl_UT + ddl_WA, data = ddl1)
mod_10  <-  lm(formula = pje ~ ahorros + ingpc + pobreza + veteranos + mujeres +
densidad + crimen + ddl_AR + ddl_CA + ddl_CO +
ddl_DC + ddl_DE + ddl_FL + ddl_IA + ddl_ID + ddl_IL + ddl_IN +
ddl_KS + ddl_LA + ddl_MA + ddl_ME + ddl_MI + ddl_MN + ddl_MO +
ddl_MS + ddl_NC + ddl_NE + ddl_NJ + ddl_NM + ddl_NY + ddl_OH +
ddl_OR + ddl_PA + ddl_TN + ddl_UT + ddl_WA, data = ddl1)
summary(mod_10)
plot(mod_10)
ddl_MS + ddl_NE + ddl_OH + ddl_PA + ddl_TN + ddl_UT + ddl_WA, data = ddl)
rm( list=ls() )
gc()
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(alr4)
library(ISLR)
library(GGally)
library(qpcR)
library(UsingR)
library(data.table)
library(funModeling)
library(scales)
library(dummies)
library(kableExtra)
library(psych)
library(glmnet)
library(dplyr)
library(leaps)
library(UsingR)
library(tidyverse)
library(MASS)
library(glmnet)
library(leaps)
library(purrr)
library(corrplot)
#Cargamos el dataset / Cadauno usa su directorio
setwd("C:/Users/vieraa/Documents/GitHub/RA_final" )
#cardo dataset de tarea
data <- fread("clinton.txt")
#Voy a realizar un EDA del dataset
glimpse(data)
str(data)
#Analicemos la distribucion de frecuencia por estado
Frec_abs=table(data$estado)
mod_1<- lm(pje ~ pobreza + densidad + mujeres + ahorros + veteranos + ancianos + crimen , data = data)
summary(mod_1)
## Paso estados a datos dummy
data_dummy <- data
data_dummy <- cbind(data_dummy, dummy(data$estado, sep ="_"))
##Borro lo que no necesito:
data_dummy$estado <- NULL
data_dummy$condado <- NULL
data_dummy$edad<- NULL # ya no se ten????a en cuenta en el mod 1
data_dummy$ingpc<- NULL# ya no se ten????a en cuenta en el mod 1
#data_dummy$data_dummy_1 <- NULL #a la mierda regiÃÂ³n 1
data_dummy$data_dummy_AL <- NULL #a la mierda Alabam
mod_2<- lm(pje ~ ., data = data_dummy)
summary(mod_2)
stepAIC(
object = lm(pje ~ ., data = data_dummy), #punto de partida
scope = list(upper = lm(pje ~ 1, data = data_dummy)), #mÃ¡ximo modelo posible
direction = "backward", #mÃ©todo de selecciÃ³n
trace = F #para no imprimir resultados parciales
)
mod_3 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + ##42 de las 56 variables
densidad + crimen + data_dummy_AR + data_dummy_AZ + data_dummy_CO +
data_dummy_CT + data_dummy_DC + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_IN + data_dummy_KS +
data_dummy_LA + data_dummy_MA + data_dummy_ME + data_dummy_MN +
data_dummy_MS + data_dummy_MT + data_dummy_NC + data_dummy_ND +
data_dummy_NE + data_dummy_NH + data_dummy_NM + data_dummy_NV +
data_dummy_NY + data_dummy_OH + data_dummy_OK + data_dummy_OR +
data_dummy_PA + data_dummy_RI + data_dummy_SD + data_dummy_TN +
data_dummy_TX + data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy)
summary(mod_3)
anova(mod_3)
mod_4 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres +
densidad + data_dummy_AR + data_dummy_AZ  +
data_dummy_CT + data_dummy_DC + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_IN + data_dummy_KS +
data_dummy_LA + data_dummy_MA + data_dummy_ME + data_dummy_MN +
data_dummy_MS + data_dummy_MT + data_dummy_NC + data_dummy_ND +
data_dummy_NE + data_dummy_NH + data_dummy_OH + data_dummy_OK +
data_dummy_OR + data_dummy_RI + data_dummy_SD + data_dummy_TN + data_dummy_TX + data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy)
summary(mod_4)
anova(mod_4)
mod_5 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + ##42 de las 56 variables
densidad + data_dummy_AR +
data_dummy_DC + data_dummy_FL + data_dummy_IA +   data_dummy_ID +
data_dummy_IL +  data_dummy_KS + data_dummy_MA +  data_dummy_MN +
data_dummy_MS +  data_dummy_NC +   data_dummy_NE +
data_dummy_OK +  data_dummy_TN + data_dummy_TX +
data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy)
summary(mod_5)
anova(mod_5)
plot(mod_5)
excluir <- c(1602)
data_dummy_1 <- slice(data_dummy, -excluir)
mod_5_A <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + ##42 de las 56 variables
densidad + data_dummy_AR +
data_dummy_DC + data_dummy_FL + data_dummy_IA +   data_dummy_ID +
data_dummy_IL +  data_dummy_KS + data_dummy_MA +  data_dummy_MN +
data_dummy_MS +  data_dummy_NC +   data_dummy_NE +
data_dummy_OK +  data_dummy_TN + data_dummy_TX +
data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy_1)
summary(mod_5_A)
plot(mod_5_A)
ahorros : veteranos + ahorros : mujeres+ pobreza : veteranos + pobreza : mujeres +
ahorros : densidad + veteranos : mujeres + pobreza : densidad + ahorros : pobreza +
veteranos : densidad + mujeres : densidad +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, data = data_dummy_1)
summary(mod_5_A1)
anova(mod_5_A1)
mod_5_A1.1 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, data = data_dummy_1)
summary(mod_5_A1.1)
anova(mod_5_A1.1)
mod_5_A1.2 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos + veteranos:densidad +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, data = data_dummy_1)
summary(mod_5_A1.2)
anova(mod_5_A1.2)
summary(mod_5_A1.2)
anova(mod_5_A1.2)
confint(mod_5_A1.1)
summary(mod_5_A1.2)
summary(mod_5_A1.1)
summary(mod_5_A1.2)
confint(mod_5_A1.2)
summary(mod_5_A1.2)$r.sq
#0.5398921
summary(mod_5_A1.2)$sigma
mod_5_A1.2
#6.92786
deviance(mod_5_A1.2) #sce
confint(mod_5_A1.1)
summary(mod_5_A1.1)$r.sq
#0.5378976
summary(mod_5_A1.1)$sigma
#6.941563
deviance(mod_5_A1.1) #sce
#Validacion de los supuestos:
#normalidad
#homocedasticidad
plot(mod_5_A1.1)
plot(mod_5_A1.1)
vif(lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres +
densidad + pobreza:veteranos + veteranos:densidad + data_dummy_AR  +
data_dummy_FL + data_dummy_IA + data_dummy_ID + data_dummy_IL +
data_dummy_KS + data_dummy_MA + data_dummy_MN + data_dummy_MS +
data_dummy_NC + data_dummy_NE + data_dummy_OK + data_dummy_TN +
data_dummy_TX + data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy_1))
source('~/GitHub/RA_final/Trabajo Final Regresion AvanzadaII.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/RA_final/Trabajo Final Regresion AvanzadaII.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/RA_final/Trabajo Final Regresion AvanzadaII.R', encoding = 'UTF-8', echo=TRUE)
mod_1<- lm(pje ~ pobreza + densidad + mujeres + ahorros + veteranos + ancianos + crimen , data = data)
summary(mod_1)
## Paso estados a datos dummy
data_dummy <- data
data_dummy <- cbind(data_dummy, dummy(data$estado, sep ="_"))
##Borro lo que no necesito:
data_dummy$estado <- NULL
data_dummy$condado <- NULL
data_dummy$edad<- NULL # ya no se ten????a en cuenta en el mod 1
data_dummy$ingpc<- NULL# ya no se ten????a en cuenta en el mod 1
#data_dummy$data_dummy_1 <- NULL #a la mierda regiÃÂ³n 1
data_dummy$data_dummy_AL <- NULL #a la mierda Alabam
mod_2<- lm(pje ~ ., data = data_dummy)
summary(mod_2)
stepAIC(
object = lm(pje ~ ., data = data_dummy), #punto de partida
scope = list(upper = lm(pje ~ 1, data = data_dummy)), #mÃ¡ximo modelo posible
direction = "backward", #mÃ©todo de selecciÃ³n
trace = F #para no imprimir resultados parciales
)
mod_3 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + ##42 de las 56 variables
densidad + crimen + data_dummy_AR + data_dummy_AZ + data_dummy_CO +
data_dummy_CT + data_dummy_DC + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_IN + data_dummy_KS +
data_dummy_LA + data_dummy_MA + data_dummy_ME + data_dummy_MN +
data_dummy_MS + data_dummy_MT + data_dummy_NC + data_dummy_ND +
data_dummy_NE + data_dummy_NH + data_dummy_NM + data_dummy_NV +
data_dummy_NY + data_dummy_OH + data_dummy_OK + data_dummy_OR +
data_dummy_PA + data_dummy_RI + data_dummy_SD + data_dummy_TN +
data_dummy_TX + data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy)
summary(mod_3)
anova(mod_3)
mod_4 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres +
densidad + data_dummy_AR + data_dummy_AZ  +
data_dummy_CT + data_dummy_DC + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_IN + data_dummy_KS +
data_dummy_LA + data_dummy_MA + data_dummy_ME + data_dummy_MN +
data_dummy_MS + data_dummy_MT + data_dummy_NC + data_dummy_ND +
data_dummy_NE + data_dummy_NH + data_dummy_OH + data_dummy_OK +
data_dummy_OR + data_dummy_RI + data_dummy_SD + data_dummy_TN + data_dummy_TX + data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy)
summary(mod_4)
anova(mod_4)
mod_5 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + ##42 de las 56 variables
densidad + data_dummy_AR +
data_dummy_DC + data_dummy_FL + data_dummy_IA +   data_dummy_ID +
data_dummy_IL +  data_dummy_KS + data_dummy_MA +  data_dummy_MN +
data_dummy_MS +  data_dummy_NC +   data_dummy_NE +
data_dummy_OK +  data_dummy_TN + data_dummy_TX +
data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy)
summary(mod_5)
anova(mod_5)
plot(mod_5)
data_dummy_1 <- slice(data_dummy, -excluir)
mod_5_A <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + ##42 de las 56 variables
densidad + data_dummy_AR +
data_dummy_DC + data_dummy_FL + data_dummy_IA +   data_dummy_ID +
data_dummy_IL +  data_dummy_KS + data_dummy_MA +  data_dummy_MN +
data_dummy_MS +  data_dummy_NC +   data_dummy_NE +
data_dummy_OK +  data_dummy_TN + data_dummy_TX +
data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy_1)
excluir <- c(1602)
data_dummy_1 <- slice(data_dummy, -excluir)
mod_5_A <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + ##42 de las 56 variables
densidad + data_dummy_AR +
data_dummy_DC + data_dummy_FL + data_dummy_IA +   data_dummy_ID +
data_dummy_IL +  data_dummy_KS + data_dummy_MA +  data_dummy_MN +
data_dummy_MS +  data_dummy_NC +   data_dummy_NE +
data_dummy_OK +  data_dummy_TN + data_dummy_TX +
data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy_1)
summary(mod_5_A)
plot(mod_5_A)
ahorros : veteranos + ahorros : mujeres+ pobreza : veteranos + pobreza : mujeres +
ahorros : densidad + veteranos : mujeres + pobreza : densidad + ahorros : pobreza +
veteranos : densidad + mujeres : densidad +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, data = data_dummy_1)
mod_5_A1 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + densidad +
ahorros : veteranos + ahorros : mujeres+ pobreza : veteranos + pobreza : mujeres +
ahorros : densidad + veteranos : mujeres + pobreza : densidad + ahorros : pobreza +
veteranos : densidad + mujeres : densidad +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, data = data_dummy_1)
summary(mod_5_A1)
anova(mod_5_A1)
mod_5_A1.1 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, data = data_dummy_1)
summary(mod_5_A1.1)
anova(mod_5_A1.1)
mod_5_A1.2 <- lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos + veteranos:densidad +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, data = data_dummy_1)
summary(mod_5_A1.2)
anova(mod_5_A1.2)
confint(mod_5_A1.1)
summary(mod_5_A1.1)$r.sq
#0.5378976
summary(mod_5_A1.1)$sigma
#6.941563
deviance(mod_5_A1.1) #sce
#Validacion de los supuestos:
#normalidad
#homocedasticidad
plot(mod_5_A1)
plot(mod_5_A1.1)
par(mfrow = c(2, 2))
plot(cooks.distance(mod_5_A1))
influence.measures(mod_5_A1.1)
vif(lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres +
densidad + pobreza:veteranos + data_dummy_AR  +
data_dummy_FL + data_dummy_IA + data_dummy_ID + data_dummy_IL +
data_dummy_KS + data_dummy_MA + data_dummy_MN + data_dummy_MS +
data_dummy_NC + data_dummy_NE + data_dummy_OK + data_dummy_TN +
data_dummy_TX + data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy_1))
vif(lm(formula = pje ~ ahorros + pobreza + veteranos + mujeres +
densidad + pobreza:veteranos + veteranos:densidad + data_dummy_AR  +
data_dummy_FL + data_dummy_IA + data_dummy_ID + data_dummy_IL +
data_dummy_KS + data_dummy_MA + data_dummy_MN + data_dummy_MS +
data_dummy_NC + data_dummy_NE + data_dummy_OK + data_dummy_TN +
data_dummy_TX + data_dummy_UT + data_dummy_VT + data_dummy_WI +
data_dummy_WY, data = data_dummy_1))
criterios <- function(m, maxi) {
SCE <- deviance(m)
n <- length(residuals(m))
p <- length(coefficients(m)) #incluye intercepto
#CME
cme <- SCE/(n-p) #igual al cuadrado de la residual SE
#R2 ajustado
r2aj <- 1 - ((n-1)/(n-p)) * (1-summary(m)$r.squared)
#summary(m)$adj.r.squared
#yi <- iris$Petal.Length
#1 - (deviance(m) / (n-p)) / ((sum((yi - mean(yi))^2))/(n-1))
#PRESS
estpress <- sum((residuals(m)/(1-hatvalues(m)))^2) #qpcR::PRESS(m)
#Mallows CP
mcp <- SCE/(deviance(maxi)/(n-length(coefficients(maxi)))) + 2*p - n
#olsrr::ols_mallows_cp(m, maxi)
#AKAIKE
akaike <- n * log(SCE/n) + 2*p #extractAIC(m)[2]
#BIC
schwarz <- n * log(SCE/n) + p*log(n) #extractAIC(m, k = log(n))[2]
tibble(CME = cme, R2Aj = r2aj, PRESS = estpress, Cp = mcp, AIC = akaike, BIC = schwarz)
}
map_dfr(list(mod_1, mod_2, mod_3, mod_4, mod_5, mod_5_A, mod_5_A1, mod_5_A1.1, mod_5_A1.2), criterios, maxi = mod_5_A1.2)
# SCT
sct <- sum((data_dummy_1$pje - mean(data_dummy_1$pje))^2)
# comparo dos modelos
anova(mod_5_A1.1, mod_5_A1)
anova(mod_5_A1.1, mod_5_A1.2)
# Test
anova(mod_5_A1.2)
vif(lm(mod_5_A1.2))
# Matriz del modelo
matriz <- model.matrix(mod_5_A1.2)
head(matriz)
lm(data_dummy_1$pje ~ matriz) # sin constante porque ya est? en la matriz
anova(mod_5_A1.2)
TukeyHSD(aov(mod_5_A1.2), "ver")
TukeyHSD(aov(mod_5_A1.2), "ver")
mod_df <-
tibble(
id = 1:nrow(data_dummy_1),
residuos = mod_5_A$residuals,
leverage = hatvalues(mod_5_A),
res_est = rstandard(mod_5_A),
res_stu = rstudent(mod_5_A),
res_press = residuos / (1 - leverage),
cook = cooks.distance(mod_5_A)
)
View(mod_df)
#TERMINARLO; VER PORQUE NO FUNCIONA
?TukeyHSD
mod_df <-
tibble(
id = 1:nrow(data_dummy_1),
residuos = mod_5_A$residuals,
leverage = hatvalues(mod_5_A),
res_est = rstandard(mod_5_A),
res_stu = rstudent(mod_5_A),
res_press = residuos / (1 - leverage),
cook = cooks.distance(mod_5_A)
)
View(mod_df)
influencePlot(mod_5_A)
influencePlot(mod_5_A)
influencePlot(mod_5_A)
influencePlot(mod_5_A)
influencePlot(mod_5_A)
anova(mod_5_A1.2)
summary(mod_5_A1.2)
##voy a probar con el mod_5_A1.2  suponiendo que son las variables que nos quedamos
install.packages("lmtest")
library(lmtest)
mod_5_A1_1_glm <- glm(pje_class ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, family = binomial(link = "logit"), data = data_dummy_1)
summary(mod_5_A1_1_glm)
mod_5_A1_1_glm <- glm(pje_class ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, family = binomial(link = "logit"), data = data_dummy_1)
anova(mod_5_A1.2)
summary(mod_5_A1.2)
data_dummy_1$pje_class <- cut(data_dummy_1$pje, # Vector de entrada (numerico)
breaks=  c(min(data_dummy_1$pje), 50.000000, max(data_dummy_1$pje)),        # NÃÂºmero o vector con los cortes
labels = c(0,1),    	# Etiquetas para cada grupo
)
data$pje_class <- cut(data_dummy$pje, # Vector de entrada (numerico)
breaks=  c(min(data_dummy$pje), 50.000000, max(data_dummy$pje)),        # NÃÂºmero o vector con los cortes
labels = c(0,1),  	# Etiquetas para cada grupo
)
par(mfrow = c(1, 2))
ggplot(data_dummy_1, aes(x = ahorros, y = pje, color = pje_class)) + geom_point()
ggplot(data_dummy_1, aes(x = pobreza, y = pje, color = pje_class)) + geom_point()
ggplot(data_dummy_1, aes(x = veteranos, y = pje, color = pje_class)) + geom_point()
ggplot(data_dummy_1, aes(x = mujeres, y = pje, color = pje_class)) + geom_point()
par(mfrow = c(1, 1))
# otra manera de mirarlos
ggplot(data, aes(x = ahorros, y = pje, color = estado)) + geom_point()
ggplot(data, aes(x = ahorros, y = pje, color = estado)) + geom_point()
ggplot(data, aes(x = pobreza, y = pje, color = estado)) + geom_point()
ggplot(data, aes(x = veteranos, y = pje, color =estado)) + geom_point()
ggplot(data, aes(x = mujeres, y = pje, color = estado)) + geom_point()
##voy a probar con el mod_5_A1.2  suponiendo que son las variables que nos quedamos
install.packages("lmtest")
library(lmtest)
install.packages("lmtest")
mod_5_A1_1_glm <- glm(pje_class ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dummy_WI + data_dummy_WY, family = binomial(link = "logit"), data = data_dummy_1)
summary(mod_5_A1_1_glm)
mod_5_A1_2_glm <- glm(pje_class ~ ahorros + pobreza + veteranos + mujeres + densidad +
pobreza : veteranos + veteranos:densidad +
data_dummy_AR + data_dummy_FL + data_dummy_IA +
data_dummy_ID + data_dummy_IL + data_dummy_KS + data_dummy_MA +
data_dummy_MN + data_dummy_MS + data_dummy_NC + data_dummy_NE +
data_dummy_OK + data_dummy_TN + data_dummy_TX +  data_dummy_UT +
data_dummy_VT + data_dumm y_WI + data_dummy_WY, family = binomial(link = "logit"), data = data_dummy_1)
summary(mod_5_A1_2_glm)
lrtest(mod_5_A1_1_glm, mod_5_A1_2_glm)
